  
-- CREATE DATABASE--

CREATE DATABASE LegendOfZelda;
GO
USE LegendOfZelda

DROP TABLE IF EXISTS Credits
DROP TABLE IF EXISTS Consoles
DROP TABLE IF EXISTS Characters
DROP TABLE IF EXISTS [DOMAINS]
DROP TABLE IF EXISTS Games
DROP TABLE IF EXISTS [Availability]

/*   Create Tables   *****************/
/* Consoles-- added Bit to indicate if I own the console or not */

CREATE TABLE Consoles( 
Console VARCHAR(100) Primary Key,
YearDebut int,
InCollection Bit)

INSERT INTO Consoles (Console, YearDebut, InCollection)
VALUES
('Nintendo Entertainment System', 1985, 1),
('Super Nintendo Entertainment System', 1991, 0),
('Game Boy', 1989, 0), 
('Nintendo 64', 1996, 1), 
('Game Boy Color', 1998, 0), 
('Game Boy Advance', 2001, 1), 
('Nintendo GameCube', 2001, 1), 
('Nintendo DS', 2004,  0), 
('Wii', 2006, 1), 
('Nintendo 3DS', 2011, 1), 
('Nintendo Switch', 2017, 1)

/* Games - one to many relationship  */

CREATE TABLE Games(
GameTitle VARCHAR(100) PRIMARY KEY NOT NULL,
Console VARCHAR(100) NOT NULL,
ReleaseDate DateTime NOT NULL,
GameOwned bit
)

INSERT INTO Games (GameTitle, Console, ReleaseDate, GameOwned)
Values 
('The Legend of Zelda', 'Nintendo Entertainment System', '1987-08-22 00:00:00.000', 1),
('The Adventure of Link', 'Nintendo Entertainment System', '1987-09-26 00:00:00.000', 0),
('A Link to the Past', 'Super Nintendo Entertainment System', '1992-04-13 00:00:00.000', 1),
('Links Awakening', 'Game Boy', '1993-08-01 00:00:00.000', 0),
('Ocarina of Time', 'Nintendo 64', '1998-11-23 00:00:00.000', 1),
('Majoras Mask', 'Nintendo 64', '2000-10-25 00:00:00.000', 1),
('Oracle of Ages', 'Game Boy Color', '2001-05-13 00:00:00.000', 0),
('Oracle of Seasons', 'Game Boy Color', '2001-05-13 00:00:00.000', 0),
('Four Swords', 'Game Boy Advance', '2003-03-14 00:00:00.000', 0),
('The Wind Waker', 'Nintendo GameCube', '2003-03-24 00:00:00.000', 1),
('Four Swords Adventures', 'Nintendo GameCube', '2004-06-07 00:00:00.000', 1),
('The Minish Cap', 'Nintendo GameCube', '2006-11-19 00:00:00.000', 0),
('Twilight Princess', 'Nintendo GameCube', '2006-11-19 00:00:00.000', 0),
('Phantom Hourglass', 'Nintendo DS', '2007-10-01 00:00:00.000', 0),
('Spirit Tracks', 'Nintendo DS', '2009-12-07 00:00:00.000', 0),
('Skyward Sword', 'Wii', '2011-11-20 00:00:00.000', 0),
('A Link Between Worlds', 'Nintendo 3DS', '2013-11-22 00:00:00.000', 0),
('Tri Force Heroes', 'Nintendo 3DS', '2015-10-23 00:00:00.000', 0),
('Breath of the Wild', 'Nintendo Switch', '2017-03-03 00:00:00.000', 1)


/* Domains  */

CREATE TABLE [DOMAINS](
LandName VARCHAR(100) PRIMARY KEY,
Race VARCHAR(100) NOT NULL,
Game VARCHAR(100) FOREIGN KEY REFERENCES Games(GameTitle),
Landmarks VARCHAR(100)
)

INSERT INTO [DOMAINS](LandName, Race, Game, Landmarks)
VALUES
('Zoras Domain', 'Zora', 'The Legend of Zelda', 'High Dive Practice Spot'),
('Hyrule Castle', 'Hylian', 'The Legend of Zelda', 'Null'),
('Kokiri Forest', 'Korkiri', 'Ocarina of Time', 'High Dive Practice Spot'),
('Kokiri Forest', 'Korkiri', 'The Legend of Zelda', 'Null'),
('Kokiri Forest', 'Korkiri', 'The Legend of Zelda', 'High Dive Practice Spot'),
('Termina', 'Zora', 'The Legend of Zelda', 'NULL'),
('Twilight Realm', 'Twili', 'The Legend of Zelda', 'High Dive Practice Spot'),
('Lost Woods', 'Kokiri', 'Ocarina of Time', 'High Dive Practice Spot'),
('Gerudo Valley', 'Gerudo', 'Ocarina of Time', 'High Dive Practice Spot'),
('Lon Lon Ranch', 'Hylian', 'Ocarina of Time', 'NULL'),
('Kakariko Village', 'Zora', 'The Legend of Zelda', 'High Dive Practice Spot'),
('Death Mountain', 'Goron', 'Ocarina of Time', 'High Dive Practice Spot'),
('Akkala Highlands', 'Zora', 'The Legend of Zelda', 'NULL'),
('Outset Island', 'Zora', 'The Legend of Zelda', 'High Dive Practice Spot'),
('Tarrey Town', 'Hylian', 'The Legend of Zelda', 'Ore and More'),
('Kara Kara Bazaar', 'Gerudo', 'Breath of the Wild', 'Blades of the Yiga'),
('Gerudo Desert', 'Gerudo', 'Twilight Princess', 'Mirror Chamber')


/* Characters  - contains FK for Game Sequence.  Characters can appear in multiple games and in multiple locations*/

CREATE TABLE Characters(
CharName VARCHAR(100),
Game VARCHAR(100) FOREIGN KEY REFERENCES GAMES(GameTitle),
Appearances int NOT NULL,
Race VARCHAR(50) NOT NULL,
Gender VARCHAR(7) NOT NULL, 
[Location] VARCHAR(100) FOREIGN KEY REFERENCES  [Domains](LandName)
)

INSERT INTO Characters (CharName, Game, Appearances, Race, Gender, [Location])
Values 
('Link', 'The Legend of Zelda', 19, 'Hylian', 'Male', Null),
('Princess Zelda', 'The Legend of Zelda', 16, 'Hylian', 'Female', 'Hyrule Castle'), 
('Navi', 'Ocarina of Time', 1, 'Fairy', ' Female', 'Kokiri Forest'),
('Ganon', 'The Legend of Zelda', 12, 'Gerudo', 'Male', Null),
('Tingle', 'Majoras Mask', 8, 'Hylian', 'Male', 'Termina'),
('Biggoron', 'Ocarina of Time', 5, 'Goron', 'Male', 'Death Mountain'),
('Midna', 'Twilight Princess', 1, 'Twili', 'Female', 'Twilight Realm'),
('Zant', 'Twilight Princess', 1, 'Twili', 'Male', 'Twilight Realm'),
('Skull Kid', 'Ocarina of Time', 2, 'Skull Kid', 'Male', 'Lost Woods'),
('Ganondorf', 'Ocarina of Time', 3, 'Gerudo', 'Male', 'Gerudo Valley'),
('Mipha', 'Breath of the Wild', 1, 'Zora', 'Female', 'Zoras Domain'),
('Great Deku Tree', 'Ocarina of Time', 3, 'Deity', 'Male', 'Kokiri Forest'),
('Malon', 'Ocarina of Time', 4, 'Hylian', 'Female', 'Lon Lon Ranch'),
('Aryll', 'The Wind Waker', 1, 'Hylian', 'Female', 'Outset Island'),
('Impa', 'The Legend of Zelda', 8, 'Hylian', 'Female', 'Kakariko Village'),
('Zora', 'A Link to the Past', 1, 'Zora', 'Male', 'Zoras Domain'),
('Hudson', 'Breath of the Wild', 1, 'Hylian', 'Male', 'Tarrey Town'),
('Kapson', 'Breath of the Wild', 1, 'Zora', 'Male', 'Tarrey Town')


/*Game Credits*/
CREATE TABLE Credits(
FirstName VARCHAR(50),
LastName VarCHAR(50), 
Position VARCHAR (50),
Game VARCHAR(100) FOREIGN KEY REFERENCES GAMES(GameTitle)
)

INSERT INTO Credits (FirstName, LastName, Position, Game)
VALUES 
('Hidemaro', 'Fujibayashi', 'Director', 'Oracle of Seasons'),
('Hidemaro', 'Fujibayashi', 'Director', 'Oracle of Ages'),
('Hidemaro', 'Fujibayashi', 'Director', 'Four Swords'),
('Hidemaro', 'Fujibayashi', 'Director', 'The Minish Cap'),
('Hidemaro', 'Fujibayashi', 'Story Writer', 'Phantom Hourglass'),
('Hidemaro', 'Fujibayashi', 'Director', 'Skyward Sword'),
('Hidemaro', 'Fujibayashi', 'Director', 'Breath of the Wild'),
('Daiki', 'Iwamoto', 'Assistant Director', 'Ocarina of Time'),
('Daiki', 'Iwamoto', 'Programmer', 'Four Swords'),
('Daiki', 'Iwamoto', 'Director', 'Spirit Tracks'),
('Daiki', 'Iwamoto', 'Director', 'Phantom Hourglass'),
('Daiki', 'Iwamoto', 'Planning', 'Skyward Sword'),
('Daiki', 'Iwamoto', 'Director', 'The Wind Waker'),
('Daiki', 'Iwamoto', 'Supervisor', 'A Link Between Worlds'),
('Daiki', 'Iwamoto', 'Supervisor', 'Tri Force Heroes'),
('Daiki', 'Iwamoto', 'Assistant Director', 'Breath of the Wild'),
('Hiroshi', 'Yamauchi', 'Executive Producer', 'Ocarina of Time'),
('Shigeru', 'Miyamoto', 'Producer', 'The Legend of Zelda'),
('Shigeru', 'Miyamoto', 'Director', 'The Legend of Zelda'),
('Shigeru', 'Miyamoto', 'Producer', 'The Adventure of Link'),
('Shigeru', 'Miyamoto', 'Producer', 'A Link to the Past'),
('Shigeru', 'Miyamoto', 'Producer', 'Links Awakening'),
('Shigeru', 'Miyamoto', 'Producer', 'Ocarina of Time'),
('Shigeru', 'Miyamoto', 'Supervisor', 'Ocarina of Time'),
('Shigeru', 'Miyamoto', 'Producer', 'Majoras Mask'),
('Shigeru', 'Miyamoto', 'Supervisor', 'Majoras Mask'),
('Shigeru', 'Miyamoto', 'Producer', 'Skyward Sword'),
('Shigeru', 'Miyamoto', 'Producer', 'Spirit Tracks'),
('Shigeru', 'Miyamoto', 'Producer', 'A Link Between Worlds'),
('Shigeru', 'Miyamoto', 'Producer', 'Tri Force Heroes'),
('Shigeru', 'Miyamoto', 'Producer', 'Twilight Princess'),
('Shigeru', 'Miyamoto', 'Producer', 'Breath of the Wild'),
('Satoru', 'Takizawa', 'Character Designer', 'Ocarina of Time'),
('Satoru', 'Takizawa', 'Enemy Designer', 'Majoras Mask'),
('Satoru', 'Takizawa', 'Design Manager', 'The Wind Waker'),
('Satoru', 'Takizawa', 'Art Director', 'Breath of the Wild'),
('Satoru', 'Takizawa', 'Character Designer', 'Twilight Princess'),
('Satoru', 'Takizawa', 'Art Director', 'Ocarina of Time'),
('Hiroki', 'Hirano', 'Cinematic Director', 'Breath of the Wild'),
('Hajime', 'Wakai', 'Sound Director', 'Breath of the Wild'),
('Tatsumi', 'Kimishima', 'Executive Producer', 'Breath of the Wild'),
('Eiji', 'Aonuma', 'Game System Director', 'Ocarina of Time'),
('Eiji', 'Aonuma', 'Dungeon Designer', 'Ocarina of Time'),
('Eiji', 'Aonuma', 'Game System Director', 'Majoras Mask'),
('Eiji', 'Aonuma', 'Producer', 'A Link to the Past'),
('Eiji', 'Aonuma', 'Producer', 'Four Swords'),
('Eiji', 'Aonuma', 'Director', 'The Wind Waker'),
('Eiji', 'Aonuma', 'Producer', 'Phantom Hourglass'),
('Eiji', 'Aonuma', 'Producer', 'Spirit Tracks'),
('Eiji', 'Aonuma', 'Producer', 'Skyward Sword'),
('Eiji', 'Aonuma', 'Producer', 'A Link Between Worlds'),
('Eiji', 'Aonuma', 'Producer', 'Breath of the Wild')

--many to many relationship
/*Availability : Games Available on Consoles Table.  Game Titles can be available on multiple consoles and consoles can have multiple games*/
 CREATE TABLE [Availability](
 ConsoleName VARCHAR(100) Foreign Key References Consoles(Console),
 Title VARCHAR(100) FOREIGN KEY REFERENCES Games(GameTitle)
 )

 INSERT INTO [Availability](ConsoleName, Title)
 VALUES 
 ('Nintendo Switch', 'Breath of the Wild'),
('Wii', 'Breath of the Wild'),
('Super Nintendo Entertainment System', 'A Link to the Past'),
('Game Boy', 'Links Awakening'),
('Game Boy Color', 'Links Awakening'),
('Nintendo GameCube', 'Ocarina of Time'),
('Nintendo 64', 'Ocarina of Time'),
('Nintendo Switch', 'Links Awakening'),
('Nintendo Switch', 'Majoras Mask'),
('Wii', 'The Legend of Zelda'),
('Wii', 'The Adventure of Link'),
('Wii', 'Twilight Princess'),
('Wii', 'The Minish Cap'),
('Wii', 'Skyward Sword'),
('Game Boy Advance', 'The Legend of Zelda'),
('Game Boy Advance', 'A Link to the Past'),
('Game Boy Color', 'Oracle of Ages'),
('Game Boy Color', 'Oracle of Seasons'),
('Game Boy Advance', 'The Minish Cap'),
('Game Boy Advance', 'Four Swords'),
('Nintendo GameCube', 'Majoras Mask'),
('Nintendo 3DS', 'The Legend of Zelda'),
('Nintendo Entertainment System', 'The Legend of Zelda'),
('Nintendo 3DS', 'The Adventure of Link'),
('Nintendo GameCube', 'The Adventure of Link'),
('Nintendo GameCube', 'The Wind Waker'),
('Nintendo GameCube', 'Twilight Princess'),
('Nintendo GameCube', 'Four Swords Adventures'),
('Nintendo 3DS', 'Ocarina of Time'),
('Nintendo 3DS', 'Majoras Mask'),
('Nintendo 3DS', 'Oracle of Ages'),
('Nintendo 3DS', 'Oracle of Seasons'),
('Nintendo DS', 'Spirit Tracks'),
('Nintendo 3DS', 'Links Awakening'),
('Nintendo 64', 'Majoras Mask'),
('Nintendo DS', 'Phantom Hourglass'),
('Nintendo 3DS', 'The Minish Cap'),
('Nintendo 3DS', 'Tri Force Heroes'),
('Nintendo 3DS', 'A Link Between Worlds')


SELECT * FROM Consoles
Select * From Games
Select * From Characters
Select * From [DOMAINS]
Select * from Credits
Select * from [Availability]

--Write a SELECT query that uses a WHERE clause

SELECT CharName
From Characters
Where Game = 'Ocarina of Time'

--Write a SELECT query that uses an OR and an AND operator

SELECT CharName
From Characters
Where Game = 'The Legend of Zelda' OR Game = 'The Wind Waker' AND Race = 'Hylian'

--Write a  SELECT query that filters NULL rows using IS NOT NULL
 
SELECT LandName, Race, Landmarks
FROM [DOMAINS]
Where Landmarks IS NOT NULL

--Write a  SELECT query that utilizes a JOIN
-- This join shows which character designer worked on which characters 

SELECT cr.lastname, ch.charname
from Credits cr
join Characters ch
on cr.Game = ch.game
where cr.Position = 'character designer'


--Write a  SELECT query that utilizes a JOIN with 3 or more tables
-- This query displays the games that I do not own that I can purchase for the consoles that I do own. 

SELECT g.gameowned, c.incollection, a.consolename, a.title
FROM Games g
JOIN Consoles c
ON  g.Console = c.Console
JOIN [Availability] a
ON a.Title = g.GameTitle
WHERE g.GameOwned = 0 and c.InCollection = 1



--Write a  SELECT query that utilizes a LEFT JOIN
-- This LEFT JOIN provides a quick view of which games I do not have credits listed in the table for.

SELECT g.gametitle, g.releasedate, cr.lastname, cr.position
from Games g
LEFT JOIN Credits cr
on g.GameTitle = cr.Game

--Write a  SELECT query that utilizes a variable in the WHERE clause
SELECT * from [Availability]

BEGIN
Declare @GameSystem varchar(50) = 'Nintendo Gamecube'

Select Title
From [Availability]
Where ConsoleName = @GameSystem

End


--Write a  SELECT query that utilizes a ORDER BY clause -- order by game appearance count

SELECT d.LandName, d.Race, ch.Charname, ch.Race as CharacterRace, ch.Appearances
FROM [DOMAINS] as d
JOIN Characters AS ch
ON d.LandName = ch.[Location]
ORDER BY ch.Appearances desc


--Write a  SELECT query that utilizes a GROUP BY clause along with an aggregate function

SELECT LastName, Count(Position) as TotalCredits, Game
from Credits
Group By LastName, Game
Order By TotalCredits desc

--Write a SELECT query that utilizes a CALCULATED FIELD
SELECT * FROM Consoles
order by YearDebut

SELECT Max(YearDebut) - Min(yeardebut) as YearsDifference
from Consoles

--Write a SELECT query that utilizes a SUBQUERY
SELECT GameTitle, Console, ReleaseDate
From Games
Where ReleaseDate < (
	Select ReleaseDate
		From Games
		Where GameTitle = 'Majoras Mask')

--Write a SELECT query that utilizes a JOIN, at least 2 OPERATORS (AND, OR, =, IN, BETWEEN, ETC) AND A GROUP BY clause with an aggregate function
 
SELECT d.LandName, count(ch.CharName)
from [DOMAINS] d
join Characters ch
on d.LandName = ch.location
Where ch.location is not null AND CH.appearances between 5 and 20
Group By d.landname

-- I used this to double check the query above. 
SELECT * 
FROM CHARACTERS 
WHERE APPEARANCES BETWEEN 5 AND 20

--Write a SELECT query that utilizes a JOIN with 3 or more tables, at 2 OPERATORS (AND, OR, =, IN, BETWEEN, ETC), a GROUP BY clause with an aggregate function, and a HAVING clause
SELECT COUNT(a.Title) as GameCount, a.ConsoleName as ConsoleNeeded
FROM Consoles c
JOIN [Availability] a
ON  c.Console = A.ConsoleName
JOIN Games g
ON a.Title = g.GameTitle
WHERE g.ReleaseDate > '1993-08-01 00:00:00.000' and g.GameOwned = 0
group by a.ConsoleName, c.YearDebut
Having  c.YearDebut between 1995 and 2020



--Design a NONCLUSTERED INDEX with ONE KEY COLUMN that improves the performance of one of the above queries
CREATE NONCLUSTERED INDEX IX_Availability_ConsoleName ON [dbo].[Availability]
(	[ConsoleName] ASC	)

--Design a NONCLUSTERED INDEX with TWO KEY COLUMNS that improves the performance of one of the above queries

CREATE NONCLUSTERED INDEX IX_Characters_CharName_Appearances ON [dbo].[Characters]
(	CharName ASC,
	Appearances
	)

--Design a NONCLUSTERED INDEX with AT LEAST ONE KEY COLUMN and AT LEAST ONE INCLUDED COLUMN that improves the performance of one of the above queries

CREATE NONCLUSTERED INDEX IX_Credits_LastNAme
ON dbo.Credits (LastName)
INCLUDE (Game)


--Write a DML statement that UPDATEs a set of rows with a WHERE clause. The values used in the WHERE clause should be a variable
SELECT * FROM [DOMAINS]

Begin
Declare @title varchar(100) = 'A Link to the Past';

Update [DOMAINS]
Set Game = 'The Legend of Zelda'
Where Game = @title
Select * from [Domains]
End

--Write a DML statement that DELETEs a set of rows with a WHERE clause. The values used in the WHERE clause should be a variable
SELECT * from Credits

Begin 

Declare @GameName varchar(100) = 'The Legend of Zelda'
DELETE From Credits
Where Game = @GameName

Select * from Credits
END

--Write a DML statement that DELETEs rows from a table that another table references. 
--This script will have to also DELETE any records that reference these rows. Both of the DELETE statements need to be wrapped in a single TRANSACTION.

BEGIN TRANSACTION

DELETE From Characters
Where [location] = 'Lon Lon Ranch'

Delete From [DOMAINS]
Where LandName = 'Lon Lon Ranch'

COMMIT



